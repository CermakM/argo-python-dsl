name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    - release-*

jobs:
  test:
    if: >-
      !contains(github.event.head_commit.message, 'doc') ||
      !contains(github.event.head_commit.message, 'release') ||
      !contains(github.event.head_commit.message, '!ignore') ||
      !contains(github.event.head_commit.message, '!minor') ||
      !contains(github.event.head_commit.message, '!refactor') ||
      !contains(github.event.head_commit.message, '!wip')

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v1
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.6"
    - name: Install dependencies
      run: |
        sudo apt-get install tree

        mkdir -p $HOME/.local/bin

        # fix permissions
        export PATH=$HOME/.local/bin:/usr/local/bin:$PATH

        sudo find . -type f -exec chmod 666 {} \;
        sudo find . -type d -exec chmod 774 {} \;
        sudo find $HOME/.local -type f -exec chmod 666 {} \;
        sudo find $HOME/.local -type d -exec chmod 774 {} \;

        sudo chown -R $USER:$USER $HOME/.local

        #s2i
        curl \
          -L https://github.com/openshift/source-to-image/releases/download/v1.2.0/source-to-image-v1.2.0-2a579ecd-linux-amd64.tar.gz \
          -o release.tar.gz
        tar -C $HOME/.local/bin -xvf release.tar.gz

        # python dependencies
        python -m pip install --user --upgrade pip pipenv
        pip install --user .

    # - name: Lint with flake8instance
    #   run: |
    #     pip install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test
      run: |
        export PATH=$HOME/.local/bin:/usr/local/bin:$PATH

        # run tests
        bash tests/test-notebooks.sh
